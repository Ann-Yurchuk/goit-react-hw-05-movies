{"version":3,"file":"static/js/884.103d7d76.chunk.js","mappings":"iOAyFA,UA/EqB,WAAO,IAAD,QACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAajB,IAXAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,IAAkBC,OAAOb,IACtBc,KAAKV,GACLW,OAAM,SAAAV,GACLC,EAdc,qOAedU,QAAQC,IAAIZ,EACb,IACAa,SAAQ,kBAAMV,GAAW,EAAjB,GACZ,GAAE,CAACR,KAECG,EACH,OAAO,KAGT,IAAMgB,EAAY,oBAAGV,EAASW,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACvCC,EAAQ,oBAAGb,EAASW,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAGzC,OACE,+BACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAME,GAAIJ,EAAV,4BACCZ,IAAW,SAAC,IAAD,IACXF,IAAS,yBAAMA,IACfF,IACC,4BACE,gBACEqB,IACErB,EAAMsB,YAAN,0CACuCtB,EAAMsB,aACzCC,EAENC,IAAKxB,EAAMyB,SAEb,wBAAKzB,EAAMyB,SACX,wBACE,gCApBc,IAAIC,KAAK1B,EAAM2B,cAAcC,cAoB3C,UAEF,wCAAgB5B,EAAM6B,eACtB,4BACE,sCACA,uBAAI7B,EAAM8B,YACV,oCACA,uBAAI9B,EAAM+B,OAAOC,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,iBAIhC,mBACA,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMd,GAAG,OAAOH,MAAO,CAAEC,KAAMC,GAA/B,qCAIF,yBACE,SAAC,KAAD,CAAMC,GAAG,UAAUH,MAAO,CAAEC,KAAMC,GAAlC,0CAKJ,SAAC,EAAAgB,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,aAMX,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getFetchMovieById } from '../api/api';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { Container } from 'components/Container/Container';\nimport loding from 'img/loding.jpg';\n\nconst ERROR_MESSAGE = 'Щось пішло не так, перезавантажте сторінку...';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    getFetchMovieById(Number(movieId))\n      .then(setMovie)\n      .catch(error => {\n        setError(ERROR_MESSAGE);\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const backLinkHref = location.state?.from ?? '/movies';\n  const backLink = location.state?.from ?? '/';\n  const getYearDate = () => new Date(movie.release_date).getFullYear();\n\n  return (\n    <>\n      <Container>\n        <Link to={backLinkHref}>Back to movies</Link>\n        {loading && <Loader />}\n        {error && <div>{error}</div>}\n        {movie && (\n          <div>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                  : loding\n              }\n              alt={movie.title}\n            />\n            <h2>{movie.title}</h2>\n            <p>\n              <span>({getYearDate()})</span>\n            </p>\n            <p>User Score: {movie.popularity}</p>\n            <div>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Gernes</h3>\n              <p>{movie.genres.map(genre => `${genre.name} `)}</p>\n            </div>\n          </div>\n        )}\n        <hr />\n        <div>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: backLink }}>\n                Get to know the cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: backLink }}>\n                Go through the reviews\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movie","setMovie","error","setError","loading","setLoading","location","useLocation","useEffect","getFetchMovieById","Number","then","catch","console","log","finally","backLinkHref","state","from","backLink","to","src","poster_path","loding","alt","title","Date","release_date","getFullYear","popularity","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}
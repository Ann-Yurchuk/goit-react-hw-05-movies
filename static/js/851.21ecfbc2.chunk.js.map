{"version":3,"file":"static/js/851.21ecfbc2.chunk.js","mappings":"wQAGaA,EAAOC,EAAAA,GAAAA,GAAH,uQAWJC,EAAOD,EAAAA,GAAAA,GAAH,4MAOJE,EAAUF,EAAAA,GAAAA,IAAH,uFAKPG,EAAQH,EAAAA,GAAAA,KAAH,sLASLI,GAAUJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kD,kBC5BPM,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACC,EAAA,EAAD,WACE,SAACX,EAAD,UACGQ,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,cAAeC,EAAtC,EAAsCA,YAAtC,OACV,UAACd,EAAD,YACE,SAACC,EAAD,CACEc,IACED,EAAW,0CAC4BA,GACnCE,EAENC,IAAG,OAAEL,QAAF,IAAEA,EAAAA,EAAkBC,KAEzB,SAACV,EAAD,CAASe,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMb,GAA7C,UACE,UAACL,EAAD,sBAASU,QAAT,IAASA,EAAAA,EAAkBC,SAVpBF,EADD,OAkBnB,E,kBCcD,EAnCa,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAaA,IAXAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,MACGC,KAAKP,GACLQ,OAAM,SAAAL,GACLC,EAZc,qOAadK,QAAQC,IAAIP,EACb,IACAQ,SAAQ,kBAAMT,GAAa,EAAnB,GACZ,GAAE,KAEElB,EACH,OAAO,KAGT,IAAM4B,GAAcX,IAAcjB,EAAO6B,OAEzC,OACE,+BACE,UAAC1B,EAAA,EAAD,YACE,2CACCc,IAAa,SAACa,EAAA,EAAD,IACbX,IAAS,uBAAIA,IACbS,IAAc,SAAC,IAAD,IACd5B,IAAU,SAACD,EAAD,CAAcC,OAAQA,QAIxC,C","sources":["components/TrendingList/TrendingList.styled.jsx","components/TrendingList/TrendingList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 200px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  padding: 0;\n  margin: 0 auto;\n  margin-top: 20px;\n  margin-bottom: 30px;\n  text-align: center;\n`;\nexport const Item = styled.li`\n  border-radius: 20px;\n  padding-bottom: 10px;\n  box-shadow: 2px 2px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ItemImg = styled.img`\n  border-radius: 3px;\n  width: 100%;\n  margin-bottom: 10px;\n`;\nexport const Title = styled.span`\n  text-decoration: none;\n  font-size: 22px;\n  font-weight: 400;\n  line-height: 1.2;\n  padding: 5px;\n  font-family: 'Helvetica Neue';\n  color: #064258;\n`;\nexport const LinkNav = styled(Link)`\n  text-decoration: none;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport loding from 'img/loading.jpg';\nimport { List, Item, ItemImg, Title, LinkNav } from './TrendingList.styled';\nimport { Container } from 'components/Container/Container';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      <List>\n        {movies.map(({ id, original_title, original_name, poster_path }) => (\n          <Item key={id}>\n            <ItemImg\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n                  : loding\n              }\n              alt={original_title ?? original_name}\n            />\n            <LinkNav to={`/movies/${id}`} state={{ from: location }}>\n              <Title> {original_title ?? original_name}</Title>\n            </LinkNav>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nTrendingList.propTypes = {\n  id: PropTypes.string,\n  original_title: PropTypes.string,\n  original_name: PropTypes.string,\n};\n","import { useEffect, useState } from 'react';\nimport { getFetchTrendingMovie } from '../api/api';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport { Container } from 'components/Container/Container';\nimport Loader from 'components/Loader/Loader';\nimport NotFountView from 'components/NotFoundView/NotFoundView';\n\nconst ERROR_MESSAGE = 'Щось пішло не так, перезавантажте сторінку...';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getFetchTrendingMovie()\n      .then(setMovies)\n      .catch(error => {\n        setError(ERROR_MESSAGE);\n        console.log(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  if (!movies) {\n    return null;\n  }\n\n  const isNotFound = !isLoading && !movies.length;\n  \n  return (\n    <>\n      <Container>\n        <h1>Trending today</h1>\n        {isLoading && <Loader />}\n        {error && <p>{error}</p>}\n        {isNotFound && <NotFountView/>}\n        {movies && <TrendingList movies={movies} />}\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","Item","ItemImg","Title","LinkNav","Link","TrendingList","movies","location","useLocation","Container","map","id","original_title","original_name","poster_path","src","loding","alt","to","state","from","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","getFetchTrendingMovie","then","catch","console","log","finally","isNotFound","length","Loader"],"sourceRoot":""}